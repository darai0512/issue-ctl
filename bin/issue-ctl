#!/usr/bin/env node

'use strict';

const {src, dst} = require('../conf/credentials');
const {get, post} = require('../lib/issue');

const main = async () => {
  const subCommand = process.argv[2];
  let issues;
  // TODO use stream in migrate
  if (subCommand === 'get' || subCommand === 'migrate') {
    issues = await get(src.endpoint, src.repository, src.auth).catch((e) => console.log(e) || []);
    if (subCommand === 'get') {
      console.log(JSON.stringify(issues));
    } else if (subCommand === 'migrate') {
      console.log(`issue count: ${issues.length}`);
    }
  }
  if (subCommand === 'post' || subCommand === 'migrate') {
    if (subCommand === 'post') {
      issues = require(process.argv[3]);
    }
    for (const issue of issues) {
      const posted = post(dst.endpoint, dst.repository, dst.auth, issue).catch((e) => console.error(e) || {});
      console.log(`posted old issue#${issue.number} to new issue#${posted.number}`);
    }
  }
};

main().catch(console.error);
